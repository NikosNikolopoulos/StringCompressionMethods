#BlueJ class context
comment0.target=Node
comment1.params=parent\ left\ right\ weight\ index
comment1.target=Node(adaptiveHuffman.tree.Node,\ adaptiveHuffman.tree.Node,\ adaptiveHuffman.tree.Node,\ int,\ int)
comment1.text=\r\n\ Internal\ node\ constructor\r\n\ @param\ parent\r\n\ @param\ left\r\n\ @param\ right\r\n\ @param\ weight\r\n\ @param\ index\r\n
comment10.params=
comment10.target=int\ getIndex()
comment11.params=index
comment11.target=void\ setIndex(int)
comment12.params=
comment12.target=int\ getValue()
comment2.params=parent
comment2.target=Node(adaptiveHuffman.tree.Node)
comment2.text=\r\n\ NYT\ Node\ constructor.\r\n\ Only\ needs\ to\ know\ parent\ node,\ as\ NYT\r\n\ has\ no\ children\ and\ is\ always\ weight\ 0\ \r\n\ and\ index\ 0.\r\n\ \r\n\ @param\ parent\r\n
comment3.params=parent\ value
comment3.target=Node(adaptiveHuffman.tree.Node,\ int)
comment3.text=\r\n\ Leaf\ Node\ constructor.\ \r\n\ New\ leaf\ is\ always\ index\ 1\ and\ weight\ 1.\r\n\ \r\n\ @param\ parent\r\n\ @param\ value\r\n
comment4.params=
comment4.target=boolean\ isLeaf()
comment5.params=
comment5.target=boolean\ isNYT()
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Return\ some\ sensible\ string\ representation\ of\ node\r\n\ -\ always\ returns\ index\ and\ weight\ and\ message\ about\ what\ \r\n\ \ \ sort\ of\ node\ it\ is\r\n\ -\ also\ returns\ value\ if\ is\ a\ leaf\ node.\r\n
comment7.params=weight
comment7.target=void\ setWeight(int)
comment7.text=\r\n\ GETTERS\ AND\ SETTERS\r\n
comment8.params=
comment8.target=int\ getWeight()
comment9.params=
comment9.target=void\ increment()
numComments=13
